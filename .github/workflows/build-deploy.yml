name: CI/CD

on:
  release:
    types: [published]

jobs:
  prepare-targets:
    outputs:
      targets: ${{ steps.tag-test.outputs.targets }}
    runs-on: ubuntu-latest
    steps:
      - id: tag-test
        name: Test whether/where to build & deploy tag
        shell: python
        run: |
          import json
          import re

          TARGET_PATTERNS = (
              ('staging', r'^\d+\.\d+.*$'),
              ('production', r'^\d+\.\d+\.\d+$'),
          )

          targets = [
              target for (target, pattern) in TARGET_PATTERNS
              if re.search(pattern, '${{ github.event.release.tag_name }}')
          ]

          print('::set-output name=targets::' + json.dumps(targets))

  build-deploy:
    needs: prepare-targets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ${{ fromJson(needs.prepare-targets.outputs.targets) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install management dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirement/console.txt

      - name: Build, push & deploy
        run: manage --show build ${{ matrix.target }} --label=${{ github.event.release.tag_name }} --if-latest --login --push --deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
          ECS_SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
          GITHUB_AUTH: ${{ github.token }}
          GITHUB_REPO: ${{ github.repository }}
          IMAGE_REPOSITORY_NAME: ${{ secrets.IMAGE_REPOSITORY_NAME }}
          IMAGE_REPOSITORY_URI: ${{ secrets.IMAGE_REPOSITORY_URI }}
