# Generated by Django 2.0.6 on 2018-06-04 17:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('initial_type', models.IntegerField(choices=[(0, 'Site staff'), (1, 'Volunteer'), (2, 'Organization member')], default=1)),
                ('skype_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('special_code', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=5000)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email_address', models.EmailField(max_length=254)),
                ('street_address', models.CharField(max_length=300)),
                ('address_line_2', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=20)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('budget', models.CharField(choices=[('B000', '<$100K'), ('B001', '$100K-$500K'), ('B005', '$500K-$1MM'), ('B010', '$1MM-$5MM'), ('B050', '$5MM-$20MM'), ('B200', '$20MM-$50MM'), ('B500', '>$50MM')], default='B000', max_length=7)),
                ('years_operation', models.CharField(choices=[('Y00', 'less than 1 year'), ('Y01', '1 to 5 years'), ('Y05', '5 to 10 years'), ('Y10', '10 to 25 years'), ('Y25', '25 or more years')], default='Y00', max_length=3)),
                ('main_cause', models.CharField(choices=[('ED', 'Education'), ('HE', 'Health'), ('EN', 'Environment'), ('SS', 'Social Services'), ('TR', 'Transportation'), ('EE', 'Energy and Environment'), ('ID', 'International development'), ('PS', 'Public Safety'), ('EC', 'Economic Development'), ('OT', 'Other')], default='ED', max_length=2)),
                ('organization_scope', models.CharField(choices=[('LO', 'City/Local'), ('ST', 'State'), ('RE', 'Region (i.e. Midwest, Northeast, etc.)'), ('CO', 'Country'), ('MN', 'Multi-national'), ('OT', 'Other')], default='LO', max_length=2)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMembershipRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('NEW', 'Not reviewed'), ('ACC', 'Accepted'), ('REJ', 'Rejected')], default='NEW', max_length=3)),
                ('public_reviewer_comments', models.CharField(blank=True, max_length=5000, null=True)),
                ('private_reviewer_notes', models.CharField(blank=True, max_length=5000, null=True)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(0, 'Administrator'), (1, 'Staff')], default=1)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('short_summary', models.CharField(max_length=1000)),
                ('motivation', models.CharField(blank=True, max_length=5000, null=True)),
                ('solution_description', models.CharField(blank=True, max_length=5000, null=True)),
                ('challenges', models.CharField(blank=True, max_length=5000, null=True)),
                ('banner_image_url', models.URLField(blank=True, null=True)),
                ('project_cause', models.CharField(choices=[('ED', 'Education'), ('HE', 'Health'), ('EN', 'Environment'), ('SS', 'Social Services'), ('TR', 'Transportation'), ('EE', 'Energy and Environment'), ('ID', 'International development'), ('PS', 'Public Safety'), ('EC', 'Economic Development'), ('OT', 'Other')], default='ED', max_length=2)),
                ('project_impact', models.CharField(blank=True, max_length=5000, null=True)),
                ('scoping_process', models.CharField(blank=True, max_length=5000, null=True)),
                ('available_staff', models.CharField(blank=True, max_length=5000, null=True)),
                ('available_data', models.CharField(blank=True, max_length=5000, null=True)),
                ('developer_agreement', models.CharField(blank=True, max_length=5000, null=True)),
                ('intended_start_date', models.DateField()),
                ('intended_end_date', models.DateField()),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DR', 'Draft'), ('NW', 'New'), ('DE', 'In scoping phase'), ('DA', 'Waiting for design review'), ('WS', 'Waiting for volunteers'), ('IP', 'In progress'), ('WR', 'Waiting final review'), ('CO', 'Completed'), ('EX', 'Expired'), ('RM', 'Deleted')], default='DR', max_length=2)),
                ('deliverable_github_url', models.URLField(blank=True, null=True)),
                ('deliverable_management_url', models.URLField(blank=True, null=True)),
                ('deliverable_documentation_url', models.URLField(blank=True, null=True)),
                ('deliverable_reports_url', models.URLField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFollower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(max_length=100)),
                ('change_target', models.IntegerField()),
                ('change_description', models.CharField(max_length=1000)),
                ('change_date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(0, 'Owner'), (1, 'Staff')], default=1)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=5000)),
                ('type', models.CharField(choices=[('SCT', 'Project scoping'), ('PMT', 'Project management'), ('DWT', 'Domain work')], default='SCT', max_length=3)),
                ('onboarding_instructions', models.CharField(max_length=5000)),
                ('business_area', models.CharField(max_length=50)),
                ('stage', models.CharField(choices=[('NOT', 'Not started'), ('STA', 'Started'), ('PRW', 'Pending review'), ('COM', 'Completed'), ('DEL', 'Deleted')], default='NOT', max_length=3)),
                ('percentage_complete', models.FloatField()),
                ('accepting_volunteers', models.BooleanField()),
                ('estimated_start_date', models.DateField()),
                ('estimated_end_date', models.DateField()),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('estimated_effort_hours', models.IntegerField(blank=True, null=True)),
                ('actual_effort_hours', models.IntegerField(blank=True, null=True)),
                ('task_home_url', models.URLField(blank=True, null=True)),
                ('task_deliverables_url', models.URLField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTaskRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(0, 'Beginner'), (1, 'Intermediate'), (2, 'Expert')], default=0)),
                ('importance', models.IntegerField(choices=[(0, 'Nice to have'), (1, 'Important'), (2, 'Required')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTaskReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volunteer_comment', models.CharField(blank=True, max_length=2000, null=True)),
                ('volunteer_effort_hours', models.IntegerField()),
                ('reviewer_comment', models.CharField(blank=True, max_length=2000, null=True)),
                ('review_request_date', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_result', models.CharField(choices=[('NEW', 'Not reviewed'), ('ACC', 'Accepted'), ('REJ', 'Rejected')], default='NEW', max_length=3)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.ProjectTask')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTaskRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(0, 'Volunteer')], default=0)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.ProjectTask')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('NEW', 'Not reviewed'), ('ACC', 'Accepted'), ('REJ', 'Rejected')], default='NEW', max_length=3)),
                ('volunteer_application_letter', models.CharField(max_length=5000)),
                ('public_reviewer_comments', models.CharField(blank=True, max_length=5000, null=True)),
                ('private_reviewer_notes', models.CharField(blank=True, max_length=5000, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.ProjectTask')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolio_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('degree_name', models.CharField(blank=True, max_length=50, null=True)),
                ('degree_level', models.IntegerField(choices=[(0, "Bachelor's"), (1, "Master's"), (2, 'PhD')], default=0)),
                ('university', models.CharField(blank=True, max_length=50, null=True)),
                ('cover_letter', models.CharField(blank=True, max_length=2000, null=True)),
                ('weekly_availability_hours', models.IntegerField()),
                ('availability_start_date', models.DateField(blank=True, null=True)),
                ('availability_end_date', models.DateField(blank=True, null=True)),
                ('volunteer_status', models.CharField(choices=[('NEW', 'Not reviewed'), ('ACC', 'Accepted'), ('REJ', 'Rejected')], default='NEW', max_length=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(0, 'Beginner'), (1, 'Intermediate'), (2, 'Expert')], default=0)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='projecttaskrequirement',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.Skill'),
        ),
        migrations.AddField(
            model_name='projecttaskrequirement',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.ProjectTask'),
        ),
    ]
